{"version":3,"sources":["webpack://InsertImagePlugin/webpack/bootstrap","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-core/src/plugin\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/button/buttonview\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-image/src/image/utils\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-image/src/image\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-core/src/command\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-core/theme/icons/image.svg\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-core/theme/icons/cancel.svg\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-core/theme/icons/check.svg\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/bindings/submithandler\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/focuscycler\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/inputtext/inputtextview\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/view\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-ui/src/viewcollection\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-utils/src/focustracker\"","webpack://InsertImagePlugin/external \"@ckeditor/ckeditor5-utils/src/keystrokehandler\"","webpack://InsertImagePlugin/./src/utils.ts","webpack://InsertImagePlugin/./src/insertimage/insertimage-command.ts","webpack://InsertImagePlugin/./src/insertimage/insertimage-editing.ts","webpack://InsertImagePlugin/./src/ui/insertimage-form-view.ts","webpack://InsertImagePlugin/./src/insertimage/insertimage-ui.ts","webpack://InsertImagePlugin/./src/insertimage.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","require","getUrlWithoutQuery","url","lastIndexOf","slice","isImageUrl","test","insertimage_command_InsertImageCommand","command_default","a","[object Object]","this","_getValue","isEnabled","_checkEnabled","imageUrl","urlWithoutQuery","_insertImage","alert","selectedElement","editor","model","document","selection","getSelectedElement","utils_","getAttribute","element","change","writer","imageElement","createElement","src","insertContent","insertimage_editing_InsertImageEditing","plugin_default","commands","add","insertimage_form_view_InsertImageFormView","view_default","locale","super","labeledInput","_createLabeledInputView","saveButton","_createButton","check_svg_default","type","cancelButton","cancel_svg_default","focusTracker","focustracker_default","keystrokes","keystrokehandler_default","_focusables","viewcollection_default","_focusCycler","focuscycler_default","focusables","keystrokeHandler","actions","focusPrevious","focusNext","delegate","to","set","fire","setTemplate","tag","attributes","class","children","render","listenTo","submithandler_default","view","forEach","v","label","icon","className","button","buttonview_default","tooltip","extendTemplate","labeledinputview_default","inputtextview_default","inputView","placeholder","insertimage_ui_InsertImageUi","balloon","plugins","contextualballoon_default","form","_createForm","attachEvents","_isVisible","visibleView","command","e","eventName","_hideForm","_showForm","editing","focus","execute","clickoutsidehandler_default","emitter","activator","contextElements","callback","image_svg_default","isOn","ui","componentFactory","hasView","position","_getBalloonPositionData","remove","defaultPositions","balloonpanelview_default","target","positions","northArrowSouth","northArrowSouthWest","northArrowSouthEast","southArrowNorth","southArrowNorthWest","southArrowNorthEast","insertimage_InsertImage","image_default","pluginName","requires"],"mappings":"sCACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,IAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QA0DA,OArDAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CZ,EAAAkB,EAAA,SAAAhB,GACA,oBAAAiB,eAAAC,aACAN,OAAAC,eAAAb,EAAAiB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAb,EAAA,cAAiDmB,OAAA,KAQjDrB,EAAAsB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAArB,EAAAqB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFA1B,EAAAkB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAArB,EAAAU,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAzB,EAAA6B,EAAA,SAAA1B,GACA,IAAAS,EAAAT,KAAAqB,WACA,WAA2B,OAAArB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD/B,EAAAkC,EAAA,GAIAlC,IAAAmC,EAAA,oBClFAhC,EAAAD,QAAAkC,QAAA,sDCAAjC,EAAAD,QAAAkC,QAAA,+DCAAjC,EAAAD,QAAAkC,QAAA,4DCAAjC,EAAAD,QAAAkC,QAAA,sDCAAjC,EAAAD,QAAAkC,QAAA,uDCAAjC,EAAAD,QAAAkC,QAAA,iECAAjC,EAAAD,QAAAkC,QAAA,0ECAAjC,EAAAD,QAAAkC,QAAA,4ECAAjC,EAAAD,QAAAkC,QAAA,6ECAAjC,EAAAD,QAAAkC,QAAA,kECAAjC,EAAAD,QAAAkC,QAAA,iECAAjC,EAAAD,QAAAkC,QAAA,oECAAjC,EAAAD,QAAAkC,QAAA,yDCAAjC,EAAAD,QAAAkC,QAAA,qECAAjC,EAAAD,QAAAkC,QAAA,2ECAAjC,EAAAD,QAAAkC,QAAA,kDCAAjC,EAAAD,QAAAkC,QAAA,4DCAAjC,EAAAD,QAAAkC,QAAA,6DCAAjC,EAAAD,QAAAkC,QAAA,kJCAO,MAAMC,EAAsBC,IAGjC,OAFwBA,EAAIC,YAAY,MAEjB,EACdD,EAAIE,MAAM,EAAGF,EAAIC,YAAY,MAG/BD,GAGIG,EAAcH,GAAyB,wBAAwBI,KAAKJ,SCH5DK,UAA2BC,EAAAC,EAG9CC,UACEC,KAAK1B,MAAQ0B,KAAKC,YAClBD,KAAKE,UAAYF,KAAKG,gBAGxBJ,QAAQK,GACN,MAAMC,EAAkBf,EAAmBc,GAEvCV,EAAWW,GACbL,KAAKM,aAAaD,GAElBE,MAAM,kBAIFR,YACN,MAAMS,EAAkBR,KAAKS,OAAOC,MAAMC,SAASC,UAAUC,qBAE7D,OAAI9C,OAAA+C,EAAA,QAAA/C,CAAQyC,GACHA,EAAgBO,aAAa,OAG/B,GAGDhB,gBACN,MAAMiB,EAAUhB,KAAKS,OAAOC,MAAMC,SAASC,UAAUC,qBAErD,OAAQ9C,OAAA+C,EAAA,QAAA/C,CAAQiD,GAGVjB,aAAaK,GACnB,MAAMM,MAAEA,GAAUV,KAAKS,OAEvBC,EACGO,OAAOC,IACN,MAAMC,EAAeD,EAAOE,cAAc,SACxCC,IAAKjB,IAIPM,EAAMY,cAAcH,EAAcT,EAAMC,SAASC,oBChD5CW,UAA2BC,EAAA1B,EACtCC,OACEC,KAAKS,OAAOgB,SAASC,IAAI,cAAe,IAAI9B,EAAmBI,KAAKS,6QCO3DkB,UAA4BC,EAAA9B,EASvCC,YAAY8B,GACVC,MAAMD,GAEN7B,KAAK+B,aAAe/B,KAAKgC,0BACzBhC,KAAKiC,WAAajC,KAAKkC,cAAclC,KAAKzB,EAAE,QAAS4D,EAAArC,EAAW,kBAChEE,KAAKiC,WAAWG,KAAO,SACvBpC,KAAKqC,aAAerC,KAAKkC,cAAclC,KAAKzB,EAAE,UAAW+D,EAAAxC,EAAY,oBAErEE,KAAKuC,aAAe,IAAIC,EAAA1C,EACxBE,KAAKyC,WAAa,IAAIC,EAAA5C,EACtBE,KAAK2C,YAAc,IAAIC,EAAA9C,EACvBE,KAAK6C,aAAe,IAAIC,EAAAhD,GACtBiD,WAAY/C,KAAK2C,YACjBJ,aAAcvC,KAAKuC,aACnBS,iBAAkBhD,KAAKyC,WACvBQ,SACEC,cAAe,cACfC,UAAW,SAIfnD,KAAKqC,aACFe,SAAS,WACTC,GAAGrD,KAAM,UAEZA,KAAKyC,WACFa,IAAI,MAAO,KACVtD,KAAKuD,KAAK,YAGdvD,KAAKwD,aACHC,IAAK,OACLC,YACEC,OACE,KACA,yBAIJC,UACE5D,KAAK+B,aACL/B,KAAKiC,WACLjC,KAAKqC,gBAKXtC,SACE+B,MAAM+B,SAEN7D,KAAKyC,WAAWqB,SAAS9D,KAAKgB,SAE9B+C,KAAgBC,KAAMhE,QAGpBA,KAAK+B,aACL/B,KAAKiC,WACLjC,KAAKqC,cAEJ4B,QAAQC,IAEPlE,KAAK2C,YAAYjB,IAAIwC,GAGrBlE,KAAKuC,aAAab,IAAIwC,EAAElD,WAItBjB,cAAcoE,EAAeC,EAAcC,GACjD,MAAMC,EAAS,IAAIC,EAAAzE,EAAWE,KAAK6B,QAcnC,OAZAyC,EAAOhB,KACLa,QACAC,OACAI,SAAS,IAGXF,EAAOG,gBACLf,YACEC,MAAOU,KAIJC,EAGDvE,0BACN,MAAMgC,EAAe,IAAI2C,EAAA5E,EAAgCE,KAAK6B,OAAQ8C,EAAA7E,GAKtE,OAHAiC,EAAaoC,MAAQnE,KAAKzB,EAAE,oBAC5BwD,EAAa6C,UAAUC,YAAc7E,KAAKzB,EAAE,oBAErCwD,SCvGE+C,UAAsBtD,EAAA1B,EAKjCC,OACEC,KAAK+E,QAAU/E,KAAKS,OAAOuE,QAAQ9G,IAAuB+G,EAAAnF,GAC1DE,KAAKsE,OAAStE,KAAKkC,gBACnBlC,KAAKkF,KAAOlF,KAAKmF,cAEjBnF,KAAKoF,eAGPC,iBACE,OAAOrF,KAAK+E,QAAQO,cAAgBtF,KAAKkF,KAGnCnF,eACN,MAAMwF,EAAUvF,KAAKS,OAAOgB,SAASvD,IAAI,eAEzC8B,KAAK8D,SACHyB,EACA,mBACA,CAACC,EAAGC,EAAWvF,KACRA,GACHF,KAAK0F,cAKX1F,KAAK8D,SACH9D,KAAKsE,OACL,UACA,IAAMtE,KAAK2F,aAGb3F,KAAK8D,SACH9D,KAAKkF,KACL,SACA,KACElF,KAAK0F,YACL1F,KAAKS,OAAOmF,QAAQ5B,KAAK6B,UAI7B7F,KAAK8D,SACH9D,KAAKkF,KACL,SACA,KACElF,KAAKS,OAAOqF,QAAQ,cAAe9F,KAAKkF,KAAKnD,aAAa6C,UAAU5D,QAAQ1C,OAC5E0B,KAAK0F,YACL1F,KAAKS,OAAOmF,QAAQ5B,KAAK6B,UAI7BE,KACEC,QAAShG,KAAKkF,KACde,UAAW,IAAMjG,KAAKqF,WACtBa,iBACElG,KAAKkF,KAAKlE,QACVhB,KAAKsE,OAAOtD,SAEdmF,SAAU,IAAMnG,KAAK0F,cAIjB3F,gBACN,MAAMU,EAAST,KAAKS,OACd8E,EAAU9E,EAAOgB,SAASvD,IAAI,eAC9BoG,EAAS,IAAIC,EAAAzE,EAAWW,EAAOoB,QA0BrC,OAxBAyC,EAAOhB,KACLa,MAAO1D,EAAOlC,EAAE,gBAChB6F,KAAMgC,EAAAtG,IAGRwE,EACGzF,KAAK,aACLwE,GAAGkC,EAAS,aAEfjB,EACGzF,KAAK,QACLwE,GAAGrD,KAAK+E,QAAQf,KAAM,aAEzBM,EACGzF,KAAK,WACLwE,GAAGiB,EAAQ,OAAS+B,IAAmBA,GAE1C/B,EAAOT,SAEPpD,EACG6F,GACAC,iBACA7E,IAAI,cAAe,IAAM1B,KAAKsE,QAE1BA,EAGDvE,cACN,MAAMmF,EAAO,IAAIvD,EAAoB3B,KAAKS,OAAOoB,QAKjD,OAFAqD,EAAKrB,SAEEqB,EAGDnF,YACFC,KAAKqF,WACPrF,KAAKkF,KAAKnD,aAAa8D,SAIpB7F,KAAK+E,QAAQyB,QAAQxG,KAAKkF,OAC7BlF,KAAK+E,QAAQrD,KACXsC,KAAMhE,KAAKkF,KACXuB,SAAUzG,KAAK0G,4BAInB1G,KAAKkF,KAAKnD,aAAa8D,SAGjB9F,YACDC,KAAKqF,aAIVrF,KAAKkF,KAAKnD,aAAa6C,UAAU5D,QAAQ1C,MAAQ,GACjD0B,KAAK+E,QAAQ4B,OAAO3G,KAAKkF,OAGnBnF,0BACN,MAAM6G,iBAAEA,GAAqBC,EAAA/G,EAE7B,OACEgH,OAAQ9G,KAAKsE,OAAOtD,QACpB+F,WACEH,EAAiBI,gBACjBJ,EAAiBK,oBACjBL,EAAiBM,oBACjBN,EAAiBO,gBACjBP,EAAiBQ,oBACjBR,EAAiBS,uECrJZC,UAAoBC,EAAAzH,EAC/B0H,wBACE,MAAO,cAGTC,sBACE,OACElG,EACAuD","file":"insertimage.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 19);\n","module.exports = require(\"@ckeditor/ckeditor5-core/src/plugin\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/button/buttonview\");","module.exports = require(\"@ckeditor/ckeditor5-image/src/image/utils\");","module.exports = require(\"@ckeditor/ckeditor5-image/src/image\");","module.exports = require(\"@ckeditor/ckeditor5-core/src/command\");","module.exports = require(\"@ckeditor/ckeditor5-core/theme/icons/image.svg\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon\");","module.exports = require(\"@ckeditor/ckeditor5-core/theme/icons/cancel.svg\");","module.exports = require(\"@ckeditor/ckeditor5-core/theme/icons/check.svg\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/bindings/submithandler\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/focuscycler\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/inputtext/inputtextview\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/view\");","module.exports = require(\"@ckeditor/ckeditor5-ui/src/viewcollection\");","module.exports = require(\"@ckeditor/ckeditor5-utils/src/focustracker\");","module.exports = require(\"@ckeditor/ckeditor5-utils/src/keystrokehandler\");","export const getUrlWithoutQuery = (url: string): string => {\r\n  const queryStartIndex = url.lastIndexOf('?');\r\n\r\n  if (queryStartIndex > -1) {\r\n    return url.slice(0, url.lastIndexOf('?'));\r\n  }\r\n\r\n  return url;\r\n};\r\n\r\nexport const isImageUrl = (url: string): boolean => /\\.(jpeg|jpg|gif|png)$/.test(url);\r\n","import Command from '@ckeditor/ckeditor5-core/src/command';\r\nimport { isImage } from '@ckeditor/ckeditor5-image/src/image/utils';\r\nimport {\r\n  getUrlWithoutQuery,\r\n  isImageUrl,\r\n} from '../utils';\r\n\r\nexport default class InsertImageCommand extends Command {\r\n  value: string;\r\n\r\n  refresh() {\r\n    this.value = this._getValue();\r\n    this.isEnabled = this._checkEnabled();\r\n  }\r\n\r\n  execute(imageUrl: string) {\r\n    const urlWithoutQuery = getUrlWithoutQuery(imageUrl);\r\n\r\n    if (isImageUrl(urlWithoutQuery)) {\r\n      this._insertImage(urlWithoutQuery);\r\n    } else {\r\n      alert('Don`t do that!');\r\n    }\r\n  }\r\n\r\n  private _getValue(): string {\r\n    const selectedElement = this.editor.model.document.selection.getSelectedElement();\r\n\r\n    if (isImage(selectedElement)) {\r\n      return selectedElement.getAttribute('src');\r\n    }\r\n\r\n    return '';\r\n  }\r\n\r\n  private _checkEnabled(): boolean {\r\n    const element = this.editor.model.document.selection.getSelectedElement();\r\n\r\n    return !isImage(element);\r\n  }\r\n\r\n  private _insertImage(imageUrl: string): void {\r\n    const { model } = this.editor;\r\n\r\n    model\r\n      .change(writer => {\r\n        const imageElement = writer.createElement('image', {\r\n          src: imageUrl,\r\n        });\r\n\r\n        // Insert the image in the current selection location.\r\n        model.insertContent(imageElement, model.document.selection);\r\n      });\r\n  }\r\n}\r\n","import Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport InsertImageCommand from './insertimage-command';\r\n\r\nexport class InsertImageEditing extends Plugin {\r\n  init() {\r\n    this.editor.commands.add('insertImage', new InsertImageCommand(this.editor));\r\n  }\r\n}\r\n","import cancelIcon from '@ckeditor/ckeditor5-core/theme/icons/cancel.svg';\r\nimport checkIcon from '@ckeditor/ckeditor5-core/theme/icons/check.svg';\r\nimport submitHandler from '@ckeditor/ckeditor5-ui/src/bindings/submithandler';\r\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\r\nimport FocusCycler from '@ckeditor/ckeditor5-ui/src/focuscycler';\r\nimport InputTextView from '@ckeditor/ckeditor5-ui/src/inputtext/inputtextview';\r\nimport LabeledInputView from '@ckeditor/ckeditor5-ui/src/labeledinput/labeledinputview';\r\nimport View from '@ckeditor/ckeditor5-ui/src/view';\r\nimport ViewCollection from '@ckeditor/ckeditor5-ui/src/viewcollection';\r\nimport FocusTracker from '@ckeditor/ckeditor5-utils/src/focustracker';\r\nimport KeystrokeHandler from '@ckeditor/ckeditor5-utils/src/keystrokehandler';\r\n\r\nexport class InsertImageFormView extends View {\r\n  readonly labeledInput: LabeledInputView<InputTextView>;\r\n  readonly saveButton: ButtonView;\r\n  readonly cancelButton: ButtonView;\r\n  private readonly focusTracker: FocusTracker;\r\n  private readonly keystrokes: KeystrokeHandler;\r\n  private readonly _focusables: ViewCollection;\r\n  private _focusCycler: FocusCycler;\r\n\r\n  constructor(locale) {\r\n    super(locale);\r\n\r\n    this.labeledInput = this._createLabeledInputView();\r\n    this.saveButton = this._createButton(this.t('Save'), checkIcon, 'ck-button-save');\r\n    this.saveButton.type = 'submit';\r\n    this.cancelButton = this._createButton(this.t('Cancel'), cancelIcon, 'ck-button-cancel');\r\n\r\n    this.focusTracker = new FocusTracker();\r\n    this.keystrokes = new KeystrokeHandler();\r\n    this._focusables = new ViewCollection();\r\n    this._focusCycler = new FocusCycler({\r\n      focusables: this._focusables,\r\n      focusTracker: this.focusTracker,\r\n      keystrokeHandler: this.keystrokes,\r\n      actions: {\r\n        focusPrevious: 'shift + tab',\r\n        focusNext: 'tab',\r\n      },\r\n    });\r\n\r\n    this.cancelButton\r\n      .delegate('execute')\r\n      .to(this, 'cancel');\r\n\r\n    this.keystrokes\r\n      .set('Esc', () => {\r\n        this.fire('cancel');\r\n      });\r\n\r\n    this.setTemplate({\r\n      tag: 'form',\r\n      attributes: {\r\n        class: [\r\n          'ck',\r\n          'ck-insert-image-form',\r\n        ],\r\n      },\r\n\r\n      children: [\r\n        this.labeledInput,\r\n        this.saveButton,\r\n        this.cancelButton,\r\n      ],\r\n    });\r\n  }\r\n\r\n  render() {\r\n    super.render();\r\n\r\n    this.keystrokes.listenTo(this.element);\r\n\r\n    submitHandler({ view: this });\r\n\r\n    [\r\n      this.labeledInput,\r\n      this.saveButton,\r\n      this.cancelButton,\r\n    ]\r\n      .forEach(v => {\r\n        // Register the view as focusable.\r\n        this._focusables.add(v);\r\n\r\n        // Register the view in the focus tracker.\r\n        this.focusTracker.add(v.element);\r\n      });\r\n  }\r\n\r\n  private _createButton(label: string, icon: string, className: string): ButtonView {\r\n    const button = new ButtonView(this.locale);\r\n\r\n    button.set({\r\n      label,\r\n      icon,\r\n      tooltip: true,\r\n    });\r\n\r\n    button.extendTemplate({\r\n      attributes: {\r\n        class: className,\r\n      },\r\n    });\r\n\r\n    return button;\r\n  }\r\n\r\n  private _createLabeledInputView(): LabeledInputView<InputTextView> {\r\n    const labeledInput = new LabeledInputView<InputTextView>(this.locale, InputTextView);\r\n\r\n    labeledInput.label = this.t('Insert image url');\r\n    labeledInput.inputView.placeholder = this.t('Insert image url');\r\n\r\n    return labeledInput;\r\n  }\r\n}\r\n","import { EditorWithUI } from '@ckeditor/ckeditor5-core/src/editor/editorwithui';\r\nimport Plugin from '@ckeditor/ckeditor5-core/src/plugin';\r\nimport imageIcon from '@ckeditor/ckeditor5-core/theme/icons/image.svg';\r\nimport clickOutsideHandler from '@ckeditor/ckeditor5-ui/src/bindings/clickoutsidehandler';\r\nimport ButtonView from '@ckeditor/ckeditor5-ui/src/button/buttonview';\r\nimport BalloonPanelView from '@ckeditor/ckeditor5-ui/src/panel/balloon/balloonpanelview';\r\nimport ContextualBalloon from '@ckeditor/ckeditor5-ui/src/panel/balloon/contextualballoon';\r\nimport { Options } from '@ckeditor/ckeditor5-utils/src/dom/position';\r\nimport { InsertImageFormView } from '../ui/insertimage-form-view';\r\n\r\nexport class InsertImageUi extends Plugin<EditorWithUI> {\r\n  private button: ButtonView;\r\n  private form: InsertImageFormView;\r\n  private balloon: ContextualBalloon;\r\n\r\n  init() {\r\n    this.balloon = this.editor.plugins.get<ContextualBalloon>(ContextualBalloon);\r\n    this.button = this._createButton();\r\n    this.form = this._createForm();\r\n\r\n    this.attachEvents();\r\n  }\r\n\r\n  private get _isVisible(): boolean {\r\n    return this.balloon.visibleView === this.form;\r\n  }\r\n\r\n  private attachEvents() {\r\n    const command = this.editor.commands.get('insertImage');\r\n\r\n    this.listenTo(\r\n      command,\r\n      'change:isEnabled',\r\n      (e, eventName, isEnabled: boolean) => {\r\n        if (!isEnabled) {\r\n          this._hideForm();\r\n        }\r\n      },\r\n    );\r\n\r\n    this.listenTo(\r\n      this.button,\r\n      'execute',\r\n      () => this._showForm(),\r\n    );\r\n\r\n    this.listenTo(\r\n      this.form,\r\n      'cancel',\r\n      () => {\r\n        this._hideForm();\r\n        this.editor.editing.view.focus();\r\n      },\r\n    );\r\n\r\n    this.listenTo(\r\n      this.form,\r\n      'submit',\r\n      () => {\r\n        this.editor.execute('insertImage', this.form.labeledInput.inputView.element.value);\r\n        this._hideForm();\r\n        this.editor.editing.view.focus();\r\n      },\r\n    );\r\n\r\n    clickOutsideHandler({\r\n      emitter: this.form,\r\n      activator: () => this._isVisible,\r\n      contextElements: [\r\n        this.form.element,\r\n        this.button.element,\r\n      ],\r\n      callback: () => this._hideForm(),\r\n    });\r\n  }\r\n\r\n  private _createButton(): ButtonView {\r\n    const editor = this.editor;\r\n    const command = editor.commands.get('insertImage');\r\n    const button = new ButtonView(editor.locale);\r\n\r\n    button.set({\r\n      label: editor.t('Insert image'),\r\n      icon: imageIcon,\r\n    });\r\n\r\n    button\r\n      .bind('isEnabled')\r\n      .to(command, 'isEnabled');\r\n\r\n    button\r\n      .bind('isOn')\r\n      .to(this.balloon.view, 'isVisible');\r\n\r\n    button\r\n      .bind('tooltip')\r\n      .to(button, 'isOn', (isOn: boolean) => !isOn);\r\n\r\n    button.render();\r\n\r\n    editor\r\n      .ui\r\n      .componentFactory\r\n      .add('insertImage', () => this.button);\r\n\r\n    return button;\r\n  }\r\n\r\n  private _createForm(): InsertImageFormView {\r\n    const form = new InsertImageFormView(this.editor.locale);\r\n\r\n    // Render the form so its #element is available for clickOutsideHandler.\r\n    form.render();\r\n\r\n    return form;\r\n  }\r\n\r\n  private _showForm() {\r\n    if (this._isVisible) {\r\n      this.form.labeledInput.focus();\r\n      return;\r\n    }\r\n\r\n    if (!this.balloon.hasView(this.form)) {\r\n      this.balloon.add({\r\n        view: this.form,\r\n        position: this._getBalloonPositionData(),\r\n      });\r\n    }\r\n\r\n    this.form.labeledInput.focus();\r\n  }\r\n\r\n  private _hideForm() {\r\n    if (!this._isVisible) {\r\n      return;\r\n    }\r\n\r\n    this.form.labeledInput.inputView.element.value = '';\r\n    this.balloon.remove(this.form);\r\n  }\r\n\r\n  private _getBalloonPositionData(): Options {\r\n    const { defaultPositions } = BalloonPanelView;\r\n\r\n    return {\r\n      target: this.button.element,\r\n      positions: [\r\n        defaultPositions.northArrowSouth,\r\n        defaultPositions.northArrowSouthWest,\r\n        defaultPositions.northArrowSouthEast,\r\n        defaultPositions.southArrowNorth,\r\n        defaultPositions.southArrowNorthWest,\r\n        defaultPositions.southArrowNorthEast,\r\n      ],\r\n    };\r\n  }\r\n}\r\n","import Plugin from '@ckeditor/ckeditor5-image/src/image';\r\nimport { InsertImageEditing } from './insertimage/insertimage-editing';\r\nimport { InsertImageUi } from './insertimage/insertimage-ui';\r\n\r\nexport class InsertImage extends Plugin {\r\n  static get pluginName() {\r\n    return 'InsertImage';\r\n  }\r\n\r\n  static get requires() {\r\n    return [\r\n      InsertImageEditing,\r\n      InsertImageUi,\r\n    ];\r\n  }\r\n}\r\n"],"sourceRoot":""}